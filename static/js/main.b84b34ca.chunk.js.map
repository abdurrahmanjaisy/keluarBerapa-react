{"version":3,"sources":["components/edit-expense.component.js","components/ExpenseTableRow.js","components/expenses-listing.component.js","components/create-expense.component.js","App.js","serviceWorker.js","index.js"],"names":["EditExpense","props","onChangeExpenseName","bind","onChangeExpenseAmount","onChangeExpenseDescription","onSubmit","state","name","amount","description","axios","get","this","match","params","id","then","res","setState","data","catch","error","console","log","e","target","value","preventDefault","expenseObject","put","history","push","className","Form","Group","controlId","Label","Control","type","onChange","Button","variant","size","block","Component","ExpenseTableRow","deleteExpense","delete","obj","to","onClick","ExpenseList","expenses","map","i","key","Table","striped","bordered","hover","DataTable","CreateExpense","expense","post","Swal","fire","Row","Col","as","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Container","Collapse","Nav","Link","href","Card","Header","Body","Title","Text","Footer","md","path","component","ExpensesList","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b84b34ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nexport default class EditExpense extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.onChangeExpenseName = this.onChangeExpenseName.bind(this);\n    this.onChangeExpenseAmount = this.onChangeExpenseAmount.bind(this);\n    this.onChangeExpenseDescription = this.onChangeExpenseDescription.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // State\n    this.state = {\n      name: '',\n      amount: '',\n      description: ''\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://keluarberapa.herokuapp.com/api/pengeluaran/' + this.props.match.params.id)\n      .then(res => {\n        this.setState({\n          name: res.data.name,\n          amount: res.data.amount,\n          description: res.data.description\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangeExpenseName(e) {\n    this.setState({ name: e.target.value })\n  }\n\n  onChangeExpenseAmount(e) {\n    this.setState({ amount: e.target.value })\n  }\n\n  onChangeExpenseDescription(e) {\n    this.setState({ description: e.target.value })\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n\n    const expenseObject = {\n      name: this.state.name,\n      amount: this.state.amount,\n      description: this.state.description\n    };\n\n    axios.put('https://keluarberapa.herokuapp.com/api/pengeluaran/' + this.props.match.params.id, expenseObject)\n      .then((res) => {\n        console.log(res.data)\n        console.log('Pengeluaran berhasil diperbarui!')\n      }).catch((error) => {\n        console.log(error)\n      })\n\n    // Redirect to Expense List \n    this.props.history.push('/daftar-pengeluaran')\n  }\n\n\n  render() {\n    return (<div className=\"form-wrapper\">\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"Name\">\n          <Form.Label>Buat Apa</Form.Label>\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeExpenseName} />\n        </Form.Group>\n\n        <Form.Group controlId=\"Amount\">\n          <Form.Label>Harga</Form.Label>\n          <Form.Control type=\"number\" value={this.state.amount} onChange={this.onChangeExpenseAmount} />\n        </Form.Group>\n\n        <Form.Group controlId=\"Description\">\n          <Form.Label>Deskripsi</Form.Label>\n          <Form.Control type=\"text\" value={this.state.description} onChange={this.onChangeExpenseDescription} />\n        </Form.Group>\n\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\n          Update\n        </Button>\n      </Form>\n    </div>);\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\nexport default class ExpenseTableRow extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteExpense = this.deleteExpense.bind(this);\n    }\n\n    deleteExpense() {\n        axios.delete('https://keluarberapa.herokuapp.com/api/pengeluaran/' + this.props.obj.id)\n            .then((res) => {\n                console.log('Pengeluaran dihapus!')\n            }).catch((error) => {\n                console.log(error)\n            })\n    }\n    render() {\n        return (\n            <tr>\n                <td>{this.props.obj.name}</td>\n                <td>{this.props.obj.amount}</td>\n                <td>{this.props.obj.description}</td>\n                <td>\n                    <Link className=\"edit-link\" to={\"/edit-pengeluaran/\" + this.props.obj.id}>\n                       <Button size=\"sm\" variant=\"info\">Edit</Button>\n                    </Link>\n                    <Button onClick={this.deleteExpense} size=\"sm\" variant=\"danger\">Delete</Button>\n                </td>\n            </tr>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport ExpenseTableRow from './ExpenseTableRow';\n\n\nexport default class ExpenseList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      expenses: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://keluarberapa.herokuapp.com/api/pengeluaran')\n      .then(res => {\n        this.setState({\n          expenses: res.data\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  DataTable() {\n    return this.state.expenses.map((res, i) => {\n      return <ExpenseTableRow obj={res} key={i} />;\n    });\n  }\n\n\n  render() {\n    return (<div className=\"table-wrapper\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Buat Apa</th>\n            <th>Harga</th>\n            <th>Deskripsi</th>\n            <th>Opsi</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.DataTable()}\n        </tbody>\n      </Table>\n    </div>);\n  }\n}","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios'\nimport ExpensesList from './expenses-listing.component';\nimport Swal from 'sweetalert2';\n\n\nexport default class CreateExpense extends Component {\n      constructor(props) {\n    super(props)\n\n    // Setting up functions\n    this.onChangeExpenseName = this.onChangeExpenseName.bind(this);\n    this.onChangeExpenseAmount = this.onChangeExpenseAmount.bind(this);\n    this.onChangeExpenseDescription = this.onChangeExpenseDescription.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    \n\n    // Setting up state\n    this.state = {\n      name: '',\n      description: '',\n      amount: ''\n    }\n  }\n\n  onChangeExpenseName(e) {\n    this.setState({name: e.target.value})\n  }\n\n  onChangeExpenseAmount(e) {\n    this.setState({amount: e.target.value})\n  }\n\n  onChangeExpenseDescription(e) {\n    this.setState({description: e.target.value})\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n     const expense = {\n      name: this.state.name,\n      amount: this.state.amount,\n      description: this.state.description\n    };\n    axios.post('https://keluarberapa.herokuapp.com/api/pengeluaran', expense)\n      .then(res => console.log(res.data));\n    // console.log(`Expense successfully created!`);\n    // console.log(`Name: ${this.state.name}`);\n    // console.log(`Amount: ${this.state.amount}`);\n    // console.log(`Description: ${this.state.description}`);\n    Swal.fire(\n  'Wow!',\n  'Pengeluaranmu berhasil ditambahkan!',\n  'berhasil'\n)\n\n    this.setState({name: '', amount: '', description: ''})\n  }\n\n  render() {\n    return (<div className=\"form-wrapper\">\n      <Form onSubmit={this.onSubmit}>\n        <Row> \n            <Col>\n             <Form.Group controlId=\"Name\">\n                <Form.Label>Buat Apa</Form.Label>\n                <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeExpenseName}/>\n             </Form.Group>\n            \n            </Col>\n            \n            <Col>\n             <Form.Group controlId=\"Amount\">\n                <Form.Label>Harga</Form.Label>\n                        <Form.Control type=\"number\" value={this.state.amount} onChange={this.onChangeExpenseAmount}/>\n             </Form.Group>\n            </Col>  \n           \n        </Row>\n            \n\n        <Form.Group controlId=\"description\">\n          <Form.Label>Deskripsi</Form.Label>\n                <Form.Control as=\"textarea\" type=\"textarea\" value={this.state.description} onChange={this.onChangeExpenseDescription}/>\n        </Form.Group>\n\n       \n        <Button variant=\"outline-secondary\" size=\"lg\" block=\"block\" type=\"submit\">\n          Tambahkan\n        </Button>\n      </Form>\n      <br></br>\n      <br></br>\n\n      <ExpensesList> </ExpensesList>\n    </div>);\n  }\n}\n\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport EditExpense from \"./components/edit-expense.component\";\nimport ExpensesList from \"./components/expenses-listing.component\";\nimport CreateExpense from \"./components/create-expense.component\";\n\nfunction App() {\n  return (<Router>\n    <div className=\"App\">\n     \n      \n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Brand>\n            <Link to={\"/\"} className=\"nav-link\">\n              keluarBerapa\n            </Link>\n          </Navbar.Brand>\n          \n  \n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Container>\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n              \n                <Nav.Link href=\"https://keluarberapa.herokuapp.com/docs\">\n                  apiDocs\n                </Nav.Link>\n                <Nav>\n                  <Link to={\"/buat-pengeluaran\"} className=\"nav-link\" >\n                  Buat Pengeluaran\n                  </Link>\n                </Nav>\n                <Nav>\n                  <Link to={\"/daftar-pengeluaran\"} className=\"nav-link\">\n                  Daftar Pegeluaran\n                  </Link>\n                </Nav>\n      \n            </Navbar.Collapse>\n        </Container>\n        </Navbar>\n      \n<Container> \n      <br/>\n\n  {/* <Row className=\"justify-content-md-center\">\n    \n    <Col md=\"auto\">Pantau terus pengeluaranmu!</Col>\n    \n  </Row> */}\n      <br/>\n\n<Card className=\"text-center\">\n        <Card.Header>buatKamu</Card.Header>\n        <Card.Body>\n          <Card.Title>manage ur self!</Card.Title>\n          <Card.Text>\n          It's not about how much money you make. It's how you save it :)\n              </Card.Text>\n          <Button href=\"http://localhost:3000/buat-pengeluaran\">\n              Atur Keuanganmu!\n            \n          </Button>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">dariAku</Card.Footer>\n      </Card> \n\n<br/>\n\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div className=\"wrapper\">\n              <Switch>\n                {/* {<Route exact path='/edi-pengeluara/:id' component={CreateExpense} />  */}\n                <Route path=\"/buat-pengeluaran\" component={CreateExpense} />\n                <Route path=\"/edit-pengeluaran/:id\" component={EditExpense} />\n                <Route path=\"/daftar-pengeluaran\" component={ExpensesList} />\n              </Switch>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      </Container>\n    </div>\n    \n  </Router>);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}